# eda.py

import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from textblob import TextBlob

sns.set()


output_dir = "/home/paztino/idmdp/finalproject2/maine-testimony/src/figs"
os.makedirs(output_dir, exist_ok=True)

# Load cleaned data from CSV files generated by bills.py
df_bills = pd.read_csv("/home/paztino/idmdp/finalproject2/maine-testimony/data/cleaned_bills.csv")
df_testimony = pd.read_csv("/home/paztino/idmdp/finalproject2/maine-testimony/data/cleaned_testimony.csv")

# Data Overview
print("Data Overview:")
print(df_bills.info())
print(df_bills.head())

# Check for missing or empty columns before proceeding with analysis
if df_bills.empty:
    print("The bills data is empty.")
else:
    # Bill Count by Legislative Session (Verifying the data presence)
    if 'session' in df_bills.columns and not df_bills['session'].isna().all():
        session_counts = df_bills['session'].value_counts()
        plt.figure(figsize=(10, 6))
        sns.barplot(x=session_counts.index, y=session_counts.values)
        plt.title("Number of Bills by Legislative Session")
        plt.xlabel("Legislative Session")
        plt.ylabel("Number of Bills")
        plt.savefig(f"{output_dir}/bills_by_session.png")
        plt.show()
    else:
        print("No valid data in 'session' column to plot Bill Count by Session.")

    #  Analysis of Bills with Amendments
    df_bills['has_amendment'] = df_bills['amendment'].notna()
    amendment_counts = df_bills['has_amendment'].value_counts()
    plt.figure(figsize=(6, 4))
    sns.barplot(x=amendment_counts.index, y=amendment_counts.values)
    plt.title("Bills with and without Amendments")
    plt.xticks(ticks=[0, 1], labels=["No Amendment", "Has Amendment"])
    plt.xlabel("Amendment Status")
    plt.ylabel("Number of Bills")
    plt.savefig(f"{output_dir}/amendment_counts.png")
    plt.show()

    if 'title' in df_bills.columns:
        def analyze_sentiment(text):
            return TextBlob(str(text)).sentiment.polarity

        df_bills['sentiment'] = df_bills['title'].apply(analyze_sentiment)
        plt.figure(figsize=(10, 6))
        sns.histplot(df_bills['sentiment'], kde=True)
        plt.title("Sentiment Distribution of Bill Titles")
        plt.xlabel("Sentiment Polarity")
        plt.ylabel("Frequency")
        plt.savefig(f"{output_dir}/sentiment_distribution.png")
        plt.show()
    else:
        print("No 'title' column found for sentiment analysis.")

    # Top 10 Most Common Subjects (if available in data)
    if 'subjects' in df_bills.columns:
        # Assuming subjects is a column with lists of subjects
        df_bills['subjects'] = df_bills['subjects'].fillna("[]").apply(eval)  # Convert stringified lists to actual lists
        subjects_exploded = df_bills.explode('subjects').dropna(subset=['subjects'])
        top_subjects = subjects_exploded['subjects'].value_counts().head(10)
        plt.figure(figsize=(10, 8))
        sns.barplot(y=top_subjects.index, x=top_subjects.values)
        plt.title("Top 10 Subjects in Bills")
        plt.xlabel("Count")
        plt.ylabel("Subjects")
        plt.savefig(f"{output_dir}/top_subjects.png")
        plt.show()
    else:
        print("No 'subjects' column found to plot subjects data.")

print("EDA Completed.")
